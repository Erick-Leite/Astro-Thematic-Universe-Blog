---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "@layouts/BlogPost.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;

const authors = await getCollection("authors");

// Assegurar que todos os autores presentes no post existam na coleção de autores.
post.data.authorsNames.forEach((authorName) => {
  const authorExists = authors.some(
    (author) => author.data.name === authorName
  );

  if (!authorExists) {
    throw new Error(
      `Autor '${authorName}' não encontrado em 'src/content/authors'.`
    );
  }
});

const { Content } = await render(post);
---

<BlogPost {...post.data}>
  <Content />
</BlogPost>
