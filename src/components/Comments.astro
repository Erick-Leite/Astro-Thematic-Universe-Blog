<div class="grid">
  <button
    id="giscus-comments-button"
    class:list={[
      "order-2 -mt-[16px] w-full rounded-lg p-1.5 text-center font-medium",
      "before:bg-primary-50 dark:before:bg-primary-950 relative before:absolute before:inset-0 before:-z-1",
      "from-primary-800 to-primary-600 hover:from-primary-900 hover:to-primary-700 dark:from-primary-200 dark:to-primary-400 dark:hover:from-primary-100 dark:hover:to-primary-300 bg-gradient-to-b",
    ]}
    ><span
      class="from-primary-200 to-primary-50 dark:from-primary-800 dark:to-primary-950 bg-gradient-to-b bg-clip-text text-transparent"
      >Carregar comentários</span
    ></button
  >

  <section
    id="giscus-comments"
    class="giscus pointer-events-none order-1"
    style="height: 0; overflow: hidden; transition: height 0.3s ease-in-out;"
    aria-hidden="true"
    tabindex="-1"
  >
  </section>
</div>

<script
  id="giscus-script"
  src="https://giscus.app/client.js"
  data-repo="Erick-Leite/Astro-Thematic-Universe-Blog"
  data-repo-id="R_kgDOPrJc5A"
  data-category="Announcements"
  data-category-id="DIC_kwDOPrJc5M4CvEnI"
  data-mapping="pathname"
  data-strict="0"
  data-reactions-enabled="1"
  data-emit-metadata="0"
  data-input-position="bottom"
  data-theme="light"
  data-lang="pt"
  crossorigin="anonymous"
  async></script>

<script is:inline>
  const giscusScript = document.getElementById("giscus-script");
  const isDark = document.documentElement.classList.contains("dark");

  if (giscusScript && isDark) {
    giscusScript.setAttribute("data-theme", "dark");
  }
</script>

<script>
  const giscusScript = document.getElementById(
    "giscus-script"
  ) as HTMLScriptElement | null;
  const giscusFrame = document.querySelector(
    ".giscus-frame"
  ) as HTMLIFrameElement | null;
  const giscusComments = document.getElementById(
    "giscus-comments"
  ) as HTMLElement | null;
  const giscusCommentsButton = document.getElementById(
    "giscus-comments-button"
  ) as HTMLButtonElement | null;

  const getTheme = (): string =>
    document.documentElement.classList.contains("dark") ? "dark" : "light";

  const updateGiscusTheme = () => {
    const theme = getTheme();

    giscusScript?.setAttribute("data-theme", theme);

    giscusFrame?.contentWindow?.postMessage(
      { giscus: { setConfig: { theme } } },
      "https://giscus.app"
    );
  };

  const observer = new MutationObserver(updateGiscusTheme);

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ["class"],
  });

  giscusCommentsButton?.addEventListener("click", () => {
    updateGiscusTheme();

    giscusCommentsButton.classList.add("hidden");

    giscusComments?.classList.remove("pointer-events-none");

    giscusComments?.setAttribute("aria-hidden", "false");

    giscusFrame?.setAttribute("title", "Comentários");

    const scrollHeight = giscusComments?.scrollHeight ?? 0;

    requestAnimationFrame(() => {
      if (giscusComments) {
        giscusComments.style.height = `${scrollHeight}px`;
      }
    });

    const handleTransitionEnd = () => {
      if (giscusComments) {
        giscusComments.style.height = "auto";

        giscusComments.removeEventListener(
          "transitionend",
          handleTransitionEnd
        );
      }
    };

    giscusComments?.addEventListener("transitionend", handleTransitionEnd);

    setTimeout(() => {
      giscusComments?.scrollIntoView({
        behavior: "smooth",
        block: "start",
      });

      giscusComments?.focus();
    }, 100);
  });
</script>
